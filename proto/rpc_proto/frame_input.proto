syntax = "proto3";

option go_package ="proto_codes/rpc";

package proto;

import "proto/rpc_proto/error_code.proto";

//客户端发来的第一个消息
message CS_ConnectMsg  {
  uint64 playerID        = 1;    // 唯一ID
  uint64 battleID        = 2;    // 战斗ID
  string token           = 3;    // 令牌
}

//服务端返回连接结果
message SC_ConnectMsg  {
  ErrorCode errorCode    = 1;    //错误码
}

//服务端返回进入房间消息
message SC_JoinRoomMsg  {
  int32 roomseatid       = 1;   // 座位id
  repeated uint64 others = 2;   // 其他人的id（不是座位）
  repeated int32 pros    = 3;   // 其他人的进度
  int32 randomSeed       = 4;   // 统一随机数种子
}

//服务端广播开始游戏消息
message SC_StartMsg  {
  int64 timeStamp        = 1;   //同步时间戳

}

//读条进度
message CS_ProgressMsg  {
  int32 pro              = 1;   //进度值0~100
}

//读条进度
message SC_ProgressMsg  {
  uint64 id              = 1;   //id
  int32 pro              = 2;   //进度值0~100
}

//操作输入消息
message CS_InputMsg  {
  int32 sid              = 1;    //操作id
  int32 x                = 2;    //操作位置x
  int32 y                = 3;    //操作位置y
  uint32 frameID         = 4;    //帧ID
}

//帧存储操作输入
message InputData {
   uint64 id              = 1;    //id
   int32 sid              = 2;    //操作id
   int32 x                = 3;    //操作位置x
   int32 y                = 4;    //操作位置y
   int32 roomseatid       = 5;    //操作者的位置索引id(1~N)
}

//帧数据
message FrameData {
  uint32 frameID = 1;   //帧ID
  repeated InputData input = 2;   //操作输入
}

//广播帧消息
message SC_FrameMsg {
  repeated FrameData frames        = 1;   //帧数据
}

//结果消息
message CS_ResultMsg {
   uint64 winnerID          = 1; //胜利者ID
}